# Screen like binding
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-battery'

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",screen*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",tmux*:Tc:smcup@:rmcup@"

# Create splits and vertical splits
bind v split-window -h -p 50 -c "#{pane_current_path}"
bind ^V split-window -h -p 50 -c "#{pane_current_path}"
bind s split-window -p 50 -c "#{pane_current_path}"
bind ^S split-window -p 50 -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
# all these comments was to work with vim
should_send_keys="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(fzf|view|n?vim?x?)(diff)?$'"

bind -n 'C-h' if-shell "$should_send_keys" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$should_send_keys" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$should_send_keys" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$should_send_keys" 'send-keys C-l'  'select-pane -R'

bind -n 'M-h' if-shell "$should_send_keys" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$should_send_keys" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$should_send_keys" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$should_send_keys" 'send-keys M-l' 'resize-pane -R 5'

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# active mouse and vim mode
set-window-option -g mode-keys vi
set -g status-keys vi
set -g mode-keys vi
set -g mouse on

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# C-z zoom current pane
unbind C-z
bind -n C-z resize-pane -Z

# Use k to enter copy-mode
unbind k
bind k copy-mode

## Copy Mode binds
# Enable mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "xclip -in -selection clipboard"
bind-key -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word \; run-shell "sleep .3s" \; send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word \; run-shell "sleep .3s" \; send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard" \;

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Theme config
set -g status-position top

set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_middle_separator "  "

set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_current_fill "all"

set -g @catppuccin_status_modules "directory date_time battery"


set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_window_current_text "#{b:pane_current_path}"
set -g @catppuccin_directory_text "#{pane_current_path}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
