# Screen like binding
unbind C-b
set -g prefix C-x

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",screen*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",tmux*:Tc:smcup@:rmcup@"


# Create splits and vertical splits
bind v split-window -h -p 50 -c "#{pane_current_path}"
bind ^V split-window -h -p 50 -c "#{pane_current_path}"
bind s split-window -p 50 -c "#{pane_current_path}"
bind ^S split-window -p 50 -c "#{pane_current_path}"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Plugin to battery
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
# all these comments was to work with vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 10'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 10'

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1  ]' "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1  ]' "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind -n 'C-h' select-pane -L
# bind -n 'C-j' select-pane -D
# bind -n 'C-k' select-pane -U
# bind -n 'C-l' select-pane -R

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
setw -g mouse on
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1


# Set status bar on
set -g status on

# Update the status line every second
set -g status-interval 1

# Set the position of window lists.
set -g status-justify left # [left | centre | right]

# Set Vi style keybinding in the status line
set -g status-keys vi

# Set the status bar position
set -g status-position bottom # [top, bottom]

# Set status bar background and foreground color.
set -g status-style fg="#907f63",bg="#3c3836"
# Set left side status bar length and style
# set -g status-left-length 60
# set -g status-left-style default

# Display the session name
set -g status-left ""

# Set right side status bar length and style
set -g status-right-length 140
set -g status-right-style default

# Set the inactive window color and style
set -g window-status-style fg="#e0ca9d",bg="#504945"
set -g window-status-format ' #I #W '

# Set the active window color and style
set -g window-status-current-style fg=black,bg="#72cce8"
set -g window-status-current-format ' #I #W '

set-option -g status-right "#(date '+%a, %b %d - %H:%M') #[fg=colour240]#[bg=colour240,fg=colour235] #{cpu_icon}#{cpu_percentage}#[fg=colour252]#[bg=colour252,fg=colour234] #{battery_icon} #{battery_percentage} "

# Colors for pane borders(default)
setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=white,bg=black

# Active pane normal, other shaded out
# setw -g window-style bg="#2c2d34"
# setw -g window-active-style fg=white,bg=black

# No escape time for vi mode
set -sg escape-time 0

# Bigger history
set -g history-limit 50000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# C-z zoom current pane
unbind C-z
bind -n C-z resize-pane -Z

unbind k
bind  k copy-mode

# unbind l
# bind  l next-layout

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
